name: Test terra-jupyter-python
# Perform smoke tests on the terra-jupyter-python Docker image to have some amount of confidence that
# Python package versions are compatible.
#
# To configure the minimal auth needed for these tests to be able to read public data from Google Cloud Platform:
# Step 1: Create a service account per these instructions:
#         https://github.com/google-github-actions/setup-gcloud/blob/master/setup-gcloud/README.md
# Step 2: Give the service account the following permissions within the project: BigQuery User
# Step 3: Store its key and project id as GitHub repository secrets GCP_SA_KEY and GCP_PROJECT_ID.
#         https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository

on:
  pull_request:
    branches: [ master ]
    paths:
    - 'terra-jupyter-python/**'
    # Note: secrets are not passed to pull requests from forks, so the dev team will need to use the manual workflow
    # dispatch trigger when receiving community contributions.

  workflow_dispatch:
    # Allows manually triggering of workflow on a selected branch via the GitHub Actions tab.
    # GitHub blog demo: https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/.
    
  push:
    # TODO(deflaux) remove these 'push' triggers after testing is complete.
    branches: [ add-smoke-tests, bump-aou-versions ]

env:
  GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

jobs:

  test_docker_image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Build Docker image
      run: |
        cd terra-jupyter-python
        docker build . --file Dockerfile --tag terra-jupyter-python:smoke-test

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Test Python code with pytest
      run: |
        docker run \
          --env GOOGLE_PROJECT \
          --volume "${{ env.GOOGLE_APPLICATION_CREDENTIALS }}:/tmp/credentials.json:ro" \
          --env GOOGLE_APPLICATION_CREDENTIALS="/tmp/credentials.json" \
          --volume $GITHUB_WORKSPACE/terra-jupyter-python:/tests \
          --workdir=/tests \
          --entrypoint="" \
          terra-jupyter-python:smoke-test \
          /bin/sh -c "pip3 install pytest; pytest"

    - name: Test Python code specific to notebooks with nbconvert
      # Simply 'Cell -> Run All` these notebooks and expect no errors.
      # See also https://github.com/marketplace/actions/run-notebook if a more complicated
      # workflow for notebooks is needed in the future.
      run: |
        chmod a+w $GITHUB_WORKSPACE/terra-jupyter-python
        docker run \
          --env GOOGLE_PROJECT \
          --volume "${{ env.GOOGLE_APPLICATION_CREDENTIALS }}:/tmp/credentials.json:ro" \
          --env GOOGLE_APPLICATION_CREDENTIALS="/tmp/credentials.json" \
          --volume $GITHUB_WORKSPACE/terra-jupyter-python:/tests \
          --workdir=/tests \
          --entrypoint="" \
          terra-jupyter-python:smoke-test \
          /bin/sh -c 'for nb in *ipynb ; do jupyter nbconvert --to html --execute "${nb}" ; done'

    - name: Upload workflow artifacts
      uses: actions/upload-artifact@v2
      with:
        name: successful-notebook-test-results
        path: terra-jupyter-python/*.html
        retention-days: 30
