From 3294c6c5342e4994e7b3207af2bd85be6616bb59 Mon Sep 17 00:00:00 2001
From: Mustafa Cavus <cavusmustafa@intel.com>
Date: Thu, 10 Jun 2021 13:53:57 -0700
Subject: [PATCH 1/2] OVTF enabled for CNNScoreVariants

Signed-off-by: Cavus Mustafa <mustafa.cavus@intel.com>
---
 .../hellbender/vqsr_cnn/vqsr_cnn/inference.py | 34 +++++++++++++++++--
 .../hellbender/vqsr_cnn/vqsr_cnn/models.py    | 10 +++---
 2 files changed, 37 insertions(+), 7 deletions(-)

diff --git a/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/inference.py b/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/inference.py
index 0adf9af9e..bb6b9f07d 100644
--- a/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/inference.py
+++ b/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/inference.py
@@ -11,6 +11,11 @@ from gatktool import tool
 # Keras Imports
 import keras
 import keras.backend as K
+import tensorflow as tf
+from tensorflow.python.framework.convert_to_constants import convert_variables_to_constants_v2
+
+import openvino_tensorflow
+openvino_tensorflow.set_backend('CPU')
 
 # Package Imports
 from . import defines
@@ -38,7 +43,9 @@ ANNOTATION_FIFO_INDEX = 5
 VARIANT_TYPE_FIFO_INDEX = 6
 VARIANT_FIFO_FIELDS = 7
 
-
+session = None
+prob_tensor = None
+full_model = None
 
 CIGAR_CODES_TO_COUNT = [
     defines.CIGAR_CODE['M'], defines.CIGAR_CODE['I'], defines.CIGAR_CODE['S'], defines.CIGAR_CODE['D']
@@ -86,6 +93,11 @@ def score_and_write_batch(model: keras.Model,
     variant_types = []
     variant_data = []
     read_batch = []
+
+    global session
+    global prob_tensor
+    global full_model
+
     for _ in range(batch_size):
         fifo_line = tool.readDataFIFO()
         fifo_data = fifo_line.split(defines.DATA_TYPE_SEPARATOR)
@@ -126,8 +138,24 @@ def score_and_write_batch(model: keras.Model,
         predictions = model.predict([np.array(reference_batch), np.array(annotation_batch)],
                                     batch_size=python_batch_size)
     elif tensor_type in defines.TENSOR_MAPS_2D:
-        predictions = model.predict(
-            [np.array(read_batch), np.array(annotation_batch)], batch_size=python_batch_size)
+        if session is None:
+            full_model = tf.function(lambda x: model(x))
+            full_model = full_model.get_concrete_function(
+                    (tf.TensorSpec(model.inputs[0].shape, model.inputs[0].dtype, name="read_tensor"),
+                        tf.TensorSpec(model.inputs[1].shape, model.inputs[1].dtype, name="best_practices")))
+            frozen_func = convert_variables_to_constants_v2(full_model)
+            frozen_func.graph.as_graph_def()
+            session = tf.compat.v1.Session(graph=frozen_func.graph)
+            prob_tensor = frozen_func.graph.get_tensor_by_name("model_1/softmax_predictions/Softmax:0")
+        for i in range(python_batch_size-batch_size):
+            tensor = np.empty(read_batch[0].shape)
+            read_batch.append(tensor)
+            tensor = np.empty(annotation_batch[0].shape)
+            annotation_batch.append(tensor)
+        batch = {}
+        batch["read_tensor:0"] = np.array(read_batch)
+        batch["best_practices:0"] = np.array(annotation_batch)
+        predictions = session.run(prob_tensor, feed_dict=batch)
     else:
         raise ValueError('Unknown tensor mapping.  Check architecture file.', tensor_type)
 
diff --git a/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py b/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py
index 074e84833..a42281584 100644
--- a/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py
+++ b/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py
@@ -4,12 +4,13 @@ import json
 # Keras Imports
 from keras import layers
 from keras import metrics
-import keras.backend as K
+import tensorflow.compat.v1.keras.backend as K
 from keras.optimizers import Adam
 from keras.models import Model, load_model
 from keras.layers.convolutional import Conv1D, Conv2D,  MaxPooling1D, MaxPooling2D
 from keras.callbacks import ModelCheckpoint, EarlyStopping, TensorBoard, ReduceLROnPlateau
 from keras.layers import Input, Dense, Dropout, BatchNormalization, SpatialDropout1D, SpatialDropout2D, Activation, Flatten, AlphaDropout
+import tensorflow as tf
 
 from . import plots
 from . import defines
@@ -20,9 +21,9 @@ from . import tensor_maps
 def start_session_get_args_and_model(intra_ops, inter_ops, semantics_json, weights_hd5=None, tensor_type=None):
     K.clear_session()
     K.get_session().close()
-    cfg = K.tf.ConfigProto(intra_op_parallelism_threads=intra_ops, inter_op_parallelism_threads=inter_ops)
+    cfg = tf.compat.v1.ConfigProto(intra_op_parallelism_threads=intra_ops, inter_op_parallelism_threads=inter_ops)
     cfg.gpu_options.allow_growth = True
-    K.set_session(K.tf.Session(config=cfg))
+    K.set_session(tf.compat.v1.Session(config=cfg))
     return args_and_model_from_semantics(semantics_json, weights_hd5, tensor_type)
 
 
@@ -609,4 +610,5 @@ def serialize_model_semantics(args, architecture_hd5):
     with open(json_file_name, 'w') as outfile:
         json.dump(semantics, outfile)
 
-    print('Saved model semantics at:', json_file_name)
\ No newline at end of file
+    print('Saved model semantics at:', json_file_name)
+
-- 
2.30.0


From 44e1618db8faccd789e3ade445ec9ac8a0c29542 Mon Sep 17 00:00:00 2001
From: Cavus Mustafa <mustafa.cavus@intel.com>
Date: Tue, 21 Sep 2021 12:07:54 -0700
Subject: [PATCH 2/2] TF 2.5.0/2.6.0 compatibility for CNNScoreVariants

---
 .../org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py   | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py b/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py
index a42281584..1ae214955 100644
--- a/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py
+++ b/src/main/python/org/broadinstitute/hellbender/vqsr_cnn/vqsr_cnn/models.py
@@ -5,7 +5,7 @@ import json
 from keras import layers
 from keras import metrics
 import tensorflow.compat.v1.keras.backend as K
-from keras.optimizers import Adam
+from keras.optimizers import adam_v2 as Adam
 from keras.models import Model, load_model
 from keras.layers.convolutional import Conv1D, Conv2D,  MaxPooling1D, MaxPooling2D
 from keras.callbacks import ModelCheckpoint, EarlyStopping, TensorBoard, ReduceLROnPlateau
-- 
2.30.0

